name: Test

on:
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8, 3.9, "3.10"]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build 01_simple_crud_sql
        run: |
          cd 01_simple_crud_sql
          docker-compose up -d
      - name: Build 02_simple_elastic_logging
        run: |
          cd 02_simple_elastic_logging
          docker-compose up -d
      - name: Build 03_grafana_monitoring
        run: |
          cd 03_grafana_monitoring
          docker-compose up -d

      - name: Test 01_simple_crud_sql with pytest
        shell: 'script -q -e -c "bash {0}"'
        run: |
          sleep 15
          docker-compose exec api-sql pytest src
      - name: Test 02_simple_elastic_logging with pytest
        shell: 'script -q -e -c "bash {0}"'
        run: |
          sleep 15
          docker-compose exec api-logging pytest src
      - name: Test 03_grafana_monitoring with pytest
        shell: 'script -q -e -c "bash {0}"'
        run: |
          sleep 15
          docker-compose exec api-monitoring pytest src