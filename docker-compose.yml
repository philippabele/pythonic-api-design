version: '3.8'

services:
  web:
    build:
      context: ./01_simple_crud_sql/src
      dockerfile: Dockerfile
    container_name: web
    command: |
      bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn src.app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'
    volumes:
      - ./01_simple_crud_sql/src/:/usr/src/
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://hello_fastapi:hello_fastapi@db/hello_fastapi_dev
    depends_on:
      - db
      - elasticsearch
    networks:
      - es-net
      - db-net

  db:
    image: postgres:13-alpine
    container_name: db
    expose:
      - 5432
    environment:
      - POSTGRES_USER=hello_fastapi
      - POSTGRES_PASSWORD=hello_fastapi
      - POSTGRES_DB=hello_fastapi_dev
    networks:
      - db-net

  elasticsearch:
    build:
      context: ./02_simple_elastic_logging
      dockerfile: Dockerfile-ES
    container_name: elasticsearch
    restart: always
    environment:
      - xpack.security.enabled=false
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - ./ci/data/es/db:/usr/share/elasticsearch/data
      - ./ci/data/es/logs:/usr/share/elasticsearch/logs
      - ./ci/data/es/repo:/usr/share/elasticsearch/repo
    expose:
      - 9200
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - es-net

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.2.0
    restart: always
    environment:
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    networks:
      - es-net
    depends_on:
      - elasticsearch
    ports:
      - "5601:5601"

volumes:
  postgres_data:

networks:
  es-net:
    driver: bridge
  db-net:
    driver: bridge