version: '3.8'

services:
  web:
    build:
      context: 01_simple_crud_sql/src
      dockerfile: Dockerfile
    container_name: web
    command: |
      bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn src.app.main:app --reload --workers 1 --host 0.0.0.0 --port 8000'
    volumes:
      - ./01_simple_crud_sql/src/:/usr/src/
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://hello_fastapi:hello_fastapi@db/hello_fastapi_dev
    networks:
      - monitoring
      - db-net
  db:
    image: postgres:13-alpine
    expose:
      - 5432
    environment:
      - POSTGRES_USER=hello_fastapi
      - POSTGRES_PASSWORD=hello_fastapi
      - POSTGRES_DB=hello_fastapi_dev
    networks:
      - db-net

  prometheus:
    image: prom/prometheus:latest
    restart: always
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./03_grafana_monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    user: "472" # 472 or 104
    ports:
      - "3000:3000"
    volumes:
      - ./03_grafana_monitoring/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml
    env_file:
      - ./03_grafana_monitoring/config.monitoring
    depends_on:
      - prometheus
    networks:
      - monitoring

volumes:
  postgres_data:

networks:
  db-net:
    driver: bridge
  monitoring:
    driver: bridge